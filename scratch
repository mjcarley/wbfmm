      for ( m = 1 ; m <= n ; m ++ ) {
	/*rotation coefficients for \pm\nu*/
	Hp = H[wbfmm_rotation_index_numn( nu,m,n)] ;
	Hm = H[wbfmm_rotation_index_numn(-nu,m,n)] ;

	tmp = Cmch ; 
	Cmch = Cmch*Cch - Smch*Sch ;
	Smch = Smch*Cch + tmp*Sch ;

	CC = Cmch*Cnph ; SS = Smch*Snph ;
	CS = Cmch*Snph ; SC = Smch*Cnph ;

	offp = 2*cstri*wbfmm_coefficient_index_nm(n, m) ;
	offm = 2*cstri*wbfmm_coefficient_index_nm(n,-m) ;

	buf[0] += 
	  Hm*Ci[offm+0]*(CC-SS) + 
	  Hp*Ci[offp+0]*(CC+SS) +
	  Hm*Ci[offm+1]*(CS-SC) +
	  Hp*Ci[offp+1]*(CS+SC) ;
	  SC*(Hp*Ci[offp+1] - Hm*Ci[offm+1]) +
	  CS*(Hp*Ci[offp+1] + Hm*Ci[offm+1]) ;

	  /* CC*(Hp*Ci[offp+0] + Hm*Ci[offm+0]) + */
	  /* SS*(Hp*Ci[offp+0] - Hm*Ci[offm+0]) - */
	  /* SC*(Hp*Ci[offp+1] - Hm*Ci[offm+1]) + */
	  /* CS*(Hp*Ci[offp+1] + Hm*Ci[offm+1]) ; */
	buf[1] += 
	  CC*(Hp*Ci[offp+1] + Hm*Ci[offm+1]) +
	  SS*(Hp*Ci[offp+1] - Hm*Ci[offm+1]) +
	  SC*(Hp*Ci[offp+0] - Hm*Ci[offm+0]) -
	  CS*(Hp*Ci[offp+0] + Hm*Ci[offm+0]) ;	

	buf[2] += 
	  CC*(Hp*Ci[offm+0] + Hm*Ci[offp+0]) +
	  SS*(Hp*Ci[offm+0] - Hm*Ci[offm+0]) +
	  SC*(Hp*Ci[offm+1] - Hm*Ci[offp+1]) -
	  CS*(Hp*Ci[offm+1] + Hm*Ci[offp+1]) ;
	buf[3] +=
	  CC*(Hp*Ci[offm+1] + Hm*Ci[offp+1]) +
	  SS*(Hp*Ci[offm+1] - Hm*Ci[offm+1]) -
	  SC*(Hp*Ci[offm+0] - Hm*Ci[offp+0]) +
	  CS*(Hp*Ci[offm+0] + Hm*Ci[offp+0]) ;
      }

      /*output indices for \pm\nu*/
      offp = 2*cstro*wbfmm_coefficient_index_nm(n, nu) ;
      offm = 2*cstro*wbfmm_coefficient_index_nm(n,-nu) ;
      Co[offp+0] += buf[0] ; Co[offp+1] += buf[1] ;
      Co[offm+0] += buf[2] ; Co[offm+1] += buf[3] ;
    }
